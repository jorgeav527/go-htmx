package vehicleModel

import (
    "fmt"
    
    "github.com/jorgeav527/vehicle-model/models"
)


templ VehicleModelList(vehicleModels []models.VehicleModel, hasMore bool, page, limit int) {
    for _, vehicleModel := range vehicleModels {
        <tr id={ fmt.Sprintf("vehicle_model_%s", vehicleModel.Id.Hex()) }>
            <td style="text-align: center;">{ fmt.Sprintf("%d", vehicleModel.Year) }</td>
            <td style="text-align: center;">{ vehicleModel.Make }</td>
            <td style="text-align: center;">{ vehicleModel.Model }</td>
            <td style="text-align: center;">{ *vehicleModel.BodyStyle }</td>
            <td>
                <button class=""
                        hx-get={ fmt.Sprintf("/vehicle-model/edit/%s", vehicleModel.Id.Hex()) }
                        hx-target="closest tr"
                        hx-swap="outerHTML">
                    Edit
                </button>
                <button class=""
                        hx-delete={ fmt.Sprintf("/vehicle-model/%s", vehicleModel.Id.Hex()) }
                        hx-target="closest tr"
                        hx-swap="outerHTML swap:1s">
                    Delete
                </button>
            </td>
        </tr>
    }
    if hasMore {
        <tr id="replaceMe">
            <td colspan="4" style="text-align: center;">
                <button class="" hx-get={fmt.Sprintf("/vehicle-model?page=%d&limit=%d", page + 1, limit)} hx-target="#replaceMe" hx-swap="outerHTML">
                    Load More Vehicles...
                </button>
            </td>
        </tr>
    }
    <script type="text/javascript">
        function handleEdit(button) {
            let editing = document.querySelector('.editing');
            if (editing) {
                Swal.fire({
                    title: 'Already Editing',
                    text: 'Hey! You are already editing a row! Do you want to cancel that edit and continue?',
                    showCancelButton: true,
                    confirmButtonText: 'Yep, Edit This Row!',
                }).then((result) => {
                    if (result.isConfirmed) {
                        htmx.trigger(editing, 'cancel');
                        htmx.trigger(button, 'edit');
                    }
                });
            } else {
                htmx.trigger(button, 'edit');
            }
        }
    </script>
}
